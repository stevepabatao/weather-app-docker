version: '3'

networks:
  wa:
    driver: bridge

services:
  wa-app:
    build:
      context: ./.docker/app
      dockerfile: Dockerfile
      args:
        WWWGROUP: 1000
    container_name: wa-app
    image: wa-app
    environment:
      - APP_SERVICE=wa-app
    volumes:
      - ./codes:/srv/html
    ports:
      - "9000:9000"
      - "9001:9001"
    networks:
      - wa

  wa-nginx:
    build: ./.docker/nginx
    container_name: wa-nginx
    image: wa-nginx
    environment:
      - HOST_NAMES="weather.local"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./codes:/srv/html
      - ./.docker/nginx/config/conf.d/web.conf:/etc/nginx/conf.d/web.conf
      - ./.docker/nginx/config/nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - wa-app
    networks:
      - wa
    links:
      - wa-app

  wa-mariadb:
    image: 'mariadb:10.5'
    container_name: wa-mariadb
    restart: unless-stopped
    tty: true
    ports:
      - '3306:3306'
    environment:
      MYSQL_ROOT_PASSWORD: ''
      MYSQL_USER: 'root'
      MYSQL_PASSWORD: ''
      MYSQL_ALLOW_EMPTY_PASSWORD: 'yes'
    volumes:
      - './.docker/db:/var/lib/mysql'
    networks:
      - wa

  wa-yarn:
    image: node:19
    container_name: wa-yarn
    volumes:
      - ./codes:/srv/html
    working_dir: /srv/html
    networks:
      - wa

  wa-redis:
    image: 'redis:7.0.4'
    container_name: wa-redis
    volumes:
      - './.docker/redis:/data'
    ports:
      - "6379:6379"
    networks:
      - wa

